generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id       String @id
  email    String @unique
  userName String @unique
  points   Int    @default(0)
  bets     Bet[]
}

model League {
  id   Int    @id @default(autoincrement())
  name String @unique
  Team Team[]
  Game Game[]
  Day  Day[]
}

model Team {
  id         Int    @id @default(autoincrement())
  name       String @unique
  logo       String
  Bet        Bet[]
  FirstTeam  Game[] @relation("FirstTeam")
  SecondTeam Game[] @relation("SecondTeam")
  LeagueId   League @relation(references: [id], fields: [leagueId], onDelete: Cascade, onUpdate: Cascade)
  leagueId   Int    @default(0)
}

model Game {
  id           Int      @id @default(autoincrement())
  date         DateTime
  firstTeam    Team?    @relation("FirstTeam", references: [id], fields: [firstTeamId])
  secondTeam   Team?    @relation("SecondTeam", references: [id], fields: [secondTeamId])
  winner       Int      @default(0)
  firstTeamId  Int?
  secondTeamId Int?
  Day          Day      @relation(fields: [dayId], references: [id], onDelete: NoAction, onUpdate: Cascade)
  dayId        Int      @default(0)
  Bet          Bet[]
  LeagueId     League   @relation(references: [id], fields: [leagueId], onDelete: Cascade, onUpdate: Cascade)
  leagueId     Int      @default(0)

  @@unique([id, date])
}

model Day {
  id       Int      @id @default(autoincrement())
  games    Game[]
  date     DateTime @default(now())
  Bet      Bet[]
  League   League   @relation(fields: [leagueId], references: [id])
  leagueId Int      @default(1)
}

model Bet {
  id     Int    @id @default(autoincrement())
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)
  game   Game   @relation(fields: [gameId], references: [id])
  team   Team   @relation(fields: [teamId], references: [id])
  day    Day    @relation(fields: [dayId], references: [id])
  userId String
  gameId Int
  teamId Int
  dayId  Int
}
